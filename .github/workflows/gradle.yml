# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Gradle on Pull Requests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest

#    if: github.event_name == 'push'
    if: github.event_name != 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Check formatting with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: spotlessCheck --no-daemon

      - name: Format code with Gradle
        uses: gradle/gradle-build-action@v2
        if: failure()
        with:
          arguments: spotlessApply --no-daemon

      - name: Commit changes
        if: failure()
        run: |
          git config user.name github-actions
          git config user-email github-actions@github.com
          git add .
          git commit -m "style: format code"
          git push

  build:
    name: Build
    runs-on: ubuntu-latest

    if: always()
    needs: format

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      id: gradle
      with:
        arguments: build -x spotlessCheck --no-daemon --scan

    - name: "Comment build scan URL"
      uses: actions/github-script@v3
      if: github.event_name == 'pull_request' && failure() && steps.gradle.outputs.build-scan-url
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'CI for ${{ github.event.after }} failed :pensive:\nThe build scan is available at ${{ steps.gradle.outputs.build-scan-url }} :raised_hands:'
          })
